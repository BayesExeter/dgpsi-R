% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot.R
\name{plot}
\alias{plot}
\alias{plot.dgp}
\alias{plot.lgp}
\alias{plot.gp}
\title{Validation plots of a constructed GP, DGP, or linked (D)GP emulator}
\usage{
\method{plot}{dgp}(
  x,
  x_test = NULL,
  y_test = NULL,
  method = "mean_var",
  style = 1,
  verb = TRUE,
  force = FALSE,
  cores = 1,
  threading = FALSE,
  ...
)

\method{plot}{lgp}(
  x,
  x_test = NULL,
  y_test = NULL,
  method = "mean_var",
  style = 1,
  verb = TRUE,
  force = FALSE,
  cores = 1,
  threading = FALSE,
  ...
)

\method{plot}{gp}(
  x,
  x_test = NULL,
  y_test = NULL,
  method = "mean_var",
  style = 1,
  verb = TRUE,
  force = FALSE,
  cores = 1,
  ...
)
}
\arguments{
\item{x}{can be one of the following:
\itemize{
\item the S3 class \code{gp}.
\item the S3 class \code{dgp}.
\item the S3 class \code{lgp}.
}}

\item{x_test}{same as that of \code{\link[=validate]{validate()}}.}

\item{y_test}{same as that of \code{\link[=validate]{validate()}}.}

\item{method}{same as that of \code{\link[=validate]{validate()}}.}

\item{style}{either \code{1} or \code{2}, indicating two different types of validation plots.}

\item{verb}{a bool indicating if the trace information on plotting will be printed during the function execution.
Defaults to \code{TRUE}.}

\item{force}{same as that of \code{\link[=validate]{validate()}}.}

\item{cores}{same as that of \code{\link[=validate]{validate()}}.}

\item{threading}{same as that of \code{\link[=validate]{validate()}}.}

\item{...}{N/A.}
}
\value{
A \code{patchwork} object.
}
\description{
This function draws validation plots of a GP, DGP, or linked (D)GP emulator.
}
\details{
See examples in Articles at \url{https://mingdeyu.github.io/dgpsi-R/}.
}
\note{
\itemize{
\item \code{\link[=plot]{plot()}} calls \code{\link[=validate]{validate()}} internally to obtain validation results for plotting. However, \code{\link[=plot]{plot()}} will not export the
emulator object with validation results. Instead, it only returns the plotting object. For small-scale validations (i.e., small
training or testing data points), direct execution of \code{\link[=plot]{plot()}} is fine. However, for moderate- to large-scale validations,
it is recommended to first run \code{\link[=validate]{validate()}} to obtain and store validation results in the emulator object, and then supply the
object to \code{\link[=plot]{plot()}}. This is because if an emulator object has the validation results stored, each time when \code{\link[=plot]{plot()}}
is invoked, unnecessary evaluations of repetitive LOO or OOS validation will not be implemented.
\item \code{\link[=plot]{plot()}} uses information provided in \code{x_test} and \code{y_test} to produce the OOS validation plots. Therefore, if validation results
are already stored in \code{x}, unless \code{x_test} and \code{y_test} are identical to those used by \code{\link[=validate]{validate()}}, \code{\link[=plot]{plot()}} will re-evaluate OOS
validations before plotting.
\item The returned \code{patchwork} object contains the \code{ggplot2} objects. One can modify the included individual ggplots
by accessing them with double-bracket indexing. See \url{https://patchwork.data-imaginist.com/} for further information.
}
}
